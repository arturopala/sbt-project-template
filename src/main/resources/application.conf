akka {

  loglevel = "INFO"
  stdout-loglevel = "INFO"

  log-config-on-start = off
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 30s

  log-dead-letters = 10
  log-dead-letters-during-shutdown = on

  actor {

    debug {
        # enable function of LoggingReceive, which is to log any received message at DEBUG level
        receive = off
        # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
        autoreceive = off
        # enable DEBUG logging of actor lifecycle changes
        lifecycle = off
        # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
        fsm = off
        # enable DEBUG logging of subscription changes on the eventStream
        event-stream = off
      }

  }

  stream {
 
    # Default flow materializer settings
    materializer {
 
      # Initial size of buffers used in stream elements
      initial-input-buffer-size = 4
      # Maximum size of buffers used in stream elements
      max-input-buffer-size = 16
 
      # Fully qualified config path which holds the dispatcher configuration
      # to be used by FlowMaterialiser when creating Actors.
      # When this value is left empty, the default-dispatcher will be used.
      dispatcher = ""
 
      # Cleanup leaked publishers and subscribers when they are not used within a given
      # deadline
      subscription-timeout {
        # when the subscription timeout is reached one of the following strategies on
        # the "stale" publisher:
        # cancel - cancel it (via `onError` or subscribing to the publisher and
        #          `cancel()`ing the subscription right away)
        # warn   - log a warning statement about the stale element (then drop the
        #          reference to it)
        # noop   - do nothing (not recommended)
        mode = cancel
 
        # time after which a subscriber / publisher is considered stale and eligible
        # for cancelation (see `akka.stream.subscription-timeout.mode`)
        timeout = 5s
      }
      
      # Enable additional troubleshooting logging at DEBUG log level
      debug-logging = off
 
      # Maximum number of elements emitted in batch if downstream signals large demand
      output-burst-limit = 1000
      }
    }

  io {

    tcp {

      direct-buffer-size = 1024

    }

  }
}

